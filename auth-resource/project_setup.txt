1. Git setup

2. Node version Manager setup  => https://github.com/coreybutler/nvm-windows/releases
https://github.com/nvm-sh/nvm?tab=readme-ov-file   
study about nodejs releases timeline => https://nodejs.org/en/about/previous-releases 

3. Nodejs Project setup

4. Typescript setup => `npm install -D typescript` , `npx tsc --init`, to compile ts file=> `npx tsc`     and we have define type definition to typescript so we install node types and other package types to use typescript `npm i -D @types/node`

5.  Prettier setup ==> format all files with Prettier=>`npx prettier . --write` 
    https://prettier.io/docs/en/install
    https://eslint.org/docs/latest/rules/


6. Eslint setup  ===> `npm install --save-dev eslint @eslint/js typescript typescript-eslint` , https://typescript-eslint.io/getting-started


7. Git hooks setup ===> `npm install --save-dev husky` , `npx husky init` , https://typicode.github.io/husky/get-started.html
https://github.com/lint-staged/lint-staged , `npm install --save-dev lint-staged`


8. Application config setup

9. ExpressJS setup ===>   `npm i -D ts-node` when we install this nodemon internally runs this ts-node for typescript

10. Logger setup  ===>  `npm i winston` , `npm i -D @types/winston`   https://github.com/winstonjs/winston


11. Error handling ===> `npm install http-errors` ,`npm install -D @types/http-errors `       https://github.com/jshttp/http-errors#readme

12. Automated Tests setup  ===>  `npm install --save-dev jest` https://jestjs.io/docs/getting-started#via-ts-jest       `npm install --save-dev ts-jest`
https://kulshekhar.github.io/ts-jest/docs/getting-started/installation/#jest-config-file
`npx ts-jest config:init`
`npm install --save-dev @types/jest`

Integration test:
`npm install supertest --save-dev`  ==> this is for test rest api
`npm install @types/supertest --save-dev`


13. Project Template ===> git remote -v , if we want to add another remote to same directory we use git remote add <name> <remote_url from github>
when we want to push code in template we have to use `git push template main` and if we want to push code in origin we have to use `git push` because we have already setted upstream like this `git push -u origin main`